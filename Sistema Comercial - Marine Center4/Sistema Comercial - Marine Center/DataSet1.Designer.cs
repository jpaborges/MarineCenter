//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Sistema_Comercial___Marine_Center {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private SERVICODataTable tableSERVICO;
        
        private CLIENTEDataTable tableCLIENTE;
        
        private PECASDataTable tablePECAS;
        
        private global::System.Data.DataRelation relationCLIENTE_SERVICO;
        
        private global::System.Data.DataRelation relationSERVICO_PECAS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SERVICO"] != null)) {
                    base.Tables.Add(new SERVICODataTable(ds.Tables["SERVICO"]));
                }
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["PECAS"] != null)) {
                    base.Tables.Add(new PECASDataTable(ds.Tables["PECAS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SERVICODataTable SERVICO {
            get {
                return this.tableSERVICO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CLIENTEDataTable CLIENTE {
            get {
                return this.tableCLIENTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PECASDataTable PECAS {
            get {
                return this.tablePECAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SERVICO"] != null)) {
                    base.Tables.Add(new SERVICODataTable(ds.Tables["SERVICO"]));
                }
                if ((ds.Tables["CLIENTE"] != null)) {
                    base.Tables.Add(new CLIENTEDataTable(ds.Tables["CLIENTE"]));
                }
                if ((ds.Tables["PECAS"] != null)) {
                    base.Tables.Add(new PECASDataTable(ds.Tables["PECAS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSERVICO = ((SERVICODataTable)(base.Tables["SERVICO"]));
            if ((initTable == true)) {
                if ((this.tableSERVICO != null)) {
                    this.tableSERVICO.InitVars();
                }
            }
            this.tableCLIENTE = ((CLIENTEDataTable)(base.Tables["CLIENTE"]));
            if ((initTable == true)) {
                if ((this.tableCLIENTE != null)) {
                    this.tableCLIENTE.InitVars();
                }
            }
            this.tablePECAS = ((PECASDataTable)(base.Tables["PECAS"]));
            if ((initTable == true)) {
                if ((this.tablePECAS != null)) {
                    this.tablePECAS.InitVars();
                }
            }
            this.relationCLIENTE_SERVICO = this.Relations["CLIENTE_SERVICO"];
            this.relationSERVICO_PECAS = this.Relations["SERVICO_PECAS"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSERVICO = new SERVICODataTable();
            base.Tables.Add(this.tableSERVICO);
            this.tableCLIENTE = new CLIENTEDataTable();
            base.Tables.Add(this.tableCLIENTE);
            this.tablePECAS = new PECASDataTable();
            base.Tables.Add(this.tablePECAS);
            this.relationCLIENTE_SERVICO = new global::System.Data.DataRelation("CLIENTE_SERVICO", new global::System.Data.DataColumn[] {
                        this.tableCLIENTE.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSERVICO.ID_CLIENTESColumn}, false);
            this.Relations.Add(this.relationCLIENTE_SERVICO);
            this.relationSERVICO_PECAS = new global::System.Data.DataRelation("SERVICO_PECAS", new global::System.Data.DataColumn[] {
                        this.tableSERVICO.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePECAS.ID_SERVICOSColumn}, false);
            this.Relations.Add(this.relationSERVICO_PECAS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSERVICO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCLIENTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePECAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SERVICORowChangeEventHandler(object sender, SERVICORowChangeEvent e);
        
        public delegate void CLIENTERowChangeEventHandler(object sender, CLIENTERowChangeEvent e);
        
        public delegate void PECASRowChangeEventHandler(object sender, PECASRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SERVICODataTable : global::System.Data.TypedTableBase<SERVICORow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnID_CLIENTES;
            
            private global::System.Data.DataColumn columnNUMERO_OS;
            
            private global::System.Data.DataColumn columnCOR;
            
            private global::System.Data.DataColumn columnDATA_ENTRADA;
            
            private global::System.Data.DataColumn columnMODELO;
            
            private global::System.Data.DataColumn columnANO;
            
            private global::System.Data.DataColumn columnCHASSI;
            
            private global::System.Data.DataColumn columnMEC_RESPONSAVEL;
            
            private global::System.Data.DataColumn columnDATA_ENTREGA;
            
            private global::System.Data.DataColumn columnDESCONTO;
            
            private global::System.Data.DataColumn columnVALOR_FRETE;
            
            private global::System.Data.DataColumn columnVALOR_OS;
            
            private global::System.Data.DataColumn columnPARECER_TECNICO;
            
            private global::System.Data.DataColumn columnGARANTIA;
            
            private global::System.Data.DataColumn columnMAO_OBRA;
            
            private global::System.Data.DataColumn columnDESCRICAO;
            
            private global::System.Data.DataColumn columnHR_KM;
            
            private global::System.Data.DataColumn columnCATEGORIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICODataTable() {
                this.TableName = "SERVICO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SERVICODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SERVICODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_CLIENTESColumn {
                get {
                    return this.columnID_CLIENTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMERO_OSColumn {
                get {
                    return this.columnNUMERO_OS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CORColumn {
                get {
                    return this.columnCOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_ENTRADAColumn {
                get {
                    return this.columnDATA_ENTRADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELOColumn {
                get {
                    return this.columnMODELO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANOColumn {
                get {
                    return this.columnANO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHASSIColumn {
                get {
                    return this.columnCHASSI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEC_RESPONSAVELColumn {
                get {
                    return this.columnMEC_RESPONSAVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_ENTREGAColumn {
                get {
                    return this.columnDATA_ENTREGA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCONTOColumn {
                get {
                    return this.columnDESCONTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALOR_FRETEColumn {
                get {
                    return this.columnVALOR_FRETE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALOR_OSColumn {
                get {
                    return this.columnVALOR_OS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARECER_TECNICOColumn {
                get {
                    return this.columnPARECER_TECNICO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GARANTIAColumn {
                get {
                    return this.columnGARANTIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAO_OBRAColumn {
                get {
                    return this.columnMAO_OBRA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRICAOColumn {
                get {
                    return this.columnDESCRICAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_KMColumn {
                get {
                    return this.columnHR_KM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CATEGORIAColumn {
                get {
                    return this.columnCATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICORow this[int index] {
                get {
                    return ((SERVICORow)(this.Rows[index]));
                }
            }
            
            public event SERVICORowChangeEventHandler SERVICORowChanging;
            
            public event SERVICORowChangeEventHandler SERVICORowChanged;
            
            public event SERVICORowChangeEventHandler SERVICORowDeleting;
            
            public event SERVICORowChangeEventHandler SERVICORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSERVICORow(SERVICORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICORow AddSERVICORow(
                        int ID, 
                        CLIENTERow parentCLIENTERowByCLIENTE_SERVICO, 
                        string NUMERO_OS, 
                        string COR, 
                        System.DateTime DATA_ENTRADA, 
                        string MODELO, 
                        string ANO, 
                        string CHASSI, 
                        string MEC_RESPONSAVEL, 
                        System.DateTime DATA_ENTREGA, 
                        double DESCONTO, 
                        double VALOR_FRETE, 
                        double VALOR_OS, 
                        string PARECER_TECNICO, 
                        string GARANTIA, 
                        double MAO_OBRA, 
                        string DESCRICAO, 
                        string HR_KM, 
                        string CATEGORIA) {
                SERVICORow rowSERVICORow = ((SERVICORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        null,
                        NUMERO_OS,
                        COR,
                        DATA_ENTRADA,
                        MODELO,
                        ANO,
                        CHASSI,
                        MEC_RESPONSAVEL,
                        DATA_ENTREGA,
                        DESCONTO,
                        VALOR_FRETE,
                        VALOR_OS,
                        PARECER_TECNICO,
                        GARANTIA,
                        MAO_OBRA,
                        DESCRICAO,
                        HR_KM,
                        CATEGORIA};
                if ((parentCLIENTERowByCLIENTE_SERVICO != null)) {
                    columnValuesArray[1] = parentCLIENTERowByCLIENTE_SERVICO[0];
                }
                rowSERVICORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSERVICORow);
                return rowSERVICORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SERVICODataTable cln = ((SERVICODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SERVICODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnID_CLIENTES = base.Columns["ID_CLIENTES"];
                this.columnNUMERO_OS = base.Columns["NUMERO_OS"];
                this.columnCOR = base.Columns["COR"];
                this.columnDATA_ENTRADA = base.Columns["DATA_ENTRADA"];
                this.columnMODELO = base.Columns["MODELO"];
                this.columnANO = base.Columns["ANO"];
                this.columnCHASSI = base.Columns["CHASSI"];
                this.columnMEC_RESPONSAVEL = base.Columns["MEC_RESPONSAVEL"];
                this.columnDATA_ENTREGA = base.Columns["DATA_ENTREGA"];
                this.columnDESCONTO = base.Columns["DESCONTO"];
                this.columnVALOR_FRETE = base.Columns["VALOR_FRETE"];
                this.columnVALOR_OS = base.Columns["VALOR_OS"];
                this.columnPARECER_TECNICO = base.Columns["PARECER_TECNICO"];
                this.columnGARANTIA = base.Columns["GARANTIA"];
                this.columnMAO_OBRA = base.Columns["MAO_OBRA"];
                this.columnDESCRICAO = base.Columns["DESCRICAO"];
                this.columnHR_KM = base.Columns["HR_KM"];
                this.columnCATEGORIA = base.Columns["CATEGORIA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnID_CLIENTES = new global::System.Data.DataColumn("ID_CLIENTES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CLIENTES);
                this.columnNUMERO_OS = new global::System.Data.DataColumn("NUMERO_OS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERO_OS);
                this.columnCOR = new global::System.Data.DataColumn("COR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOR);
                this.columnDATA_ENTRADA = new global::System.Data.DataColumn("DATA_ENTRADA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_ENTRADA);
                this.columnMODELO = new global::System.Data.DataColumn("MODELO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODELO);
                this.columnANO = new global::System.Data.DataColumn("ANO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANO);
                this.columnCHASSI = new global::System.Data.DataColumn("CHASSI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHASSI);
                this.columnMEC_RESPONSAVEL = new global::System.Data.DataColumn("MEC_RESPONSAVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEC_RESPONSAVEL);
                this.columnDATA_ENTREGA = new global::System.Data.DataColumn("DATA_ENTREGA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_ENTREGA);
                this.columnDESCONTO = new global::System.Data.DataColumn("DESCONTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCONTO);
                this.columnVALOR_FRETE = new global::System.Data.DataColumn("VALOR_FRETE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALOR_FRETE);
                this.columnVALOR_OS = new global::System.Data.DataColumn("VALOR_OS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALOR_OS);
                this.columnPARECER_TECNICO = new global::System.Data.DataColumn("PARECER_TECNICO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARECER_TECNICO);
                this.columnGARANTIA = new global::System.Data.DataColumn("GARANTIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGARANTIA);
                this.columnMAO_OBRA = new global::System.Data.DataColumn("MAO_OBRA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAO_OBRA);
                this.columnDESCRICAO = new global::System.Data.DataColumn("DESCRICAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRICAO);
                this.columnHR_KM = new global::System.Data.DataColumn("HR_KM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_KM);
                this.columnCATEGORIA = new global::System.Data.DataColumn("CATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORIA);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICORow NewSERVICORow() {
                return ((SERVICORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SERVICORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SERVICORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SERVICORowChanged != null)) {
                    this.SERVICORowChanged(this, new SERVICORowChangeEvent(((SERVICORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SERVICORowChanging != null)) {
                    this.SERVICORowChanging(this, new SERVICORowChangeEvent(((SERVICORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SERVICORowDeleted != null)) {
                    this.SERVICORowDeleted(this, new SERVICORowChangeEvent(((SERVICORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SERVICORowDeleting != null)) {
                    this.SERVICORowDeleting(this, new SERVICORowChangeEvent(((SERVICORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSERVICORow(SERVICORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SERVICODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CLIENTEDataTable : global::System.Data.TypedTableBase<CLIENTERow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNOME;
            
            private global::System.Data.DataColumn columnCPF;
            
            private global::System.Data.DataColumn columnFONE;
            
            private global::System.Data.DataColumn columnENDERECO;
            
            private global::System.Data.DataColumn columnCIDADE;
            
            private global::System.Data.DataColumn columnUF;
            
            private global::System.Data.DataColumn columnCEP;
            
            private global::System.Data.DataColumn columnOBS;
            
            private global::System.Data.DataColumn columnFONE2;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnBAIRRO;
            
            private global::System.Data.DataColumn columnIDENTIDADE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTEDataTable() {
                this.TableName = "CLIENTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CLIENTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOMEColumn {
                get {
                    return this.columnNOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPFColumn {
                get {
                    return this.columnCPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FONEColumn {
                get {
                    return this.columnFONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDERECOColumn {
                get {
                    return this.columnENDERECO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIDADEColumn {
                get {
                    return this.columnCIDADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UFColumn {
                get {
                    return this.columnUF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEPColumn {
                get {
                    return this.columnCEP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OBSColumn {
                get {
                    return this.columnOBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FONE2Column {
                get {
                    return this.columnFONE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAIRROColumn {
                get {
                    return this.columnBAIRRO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDENTIDADEColumn {
                get {
                    return this.columnIDENTIDADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow this[int index] {
                get {
                    return ((CLIENTERow)(this.Rows[index]));
                }
            }
            
            public event CLIENTERowChangeEventHandler CLIENTERowChanging;
            
            public event CLIENTERowChangeEventHandler CLIENTERowChanged;
            
            public event CLIENTERowChangeEventHandler CLIENTERowDeleting;
            
            public event CLIENTERowChangeEventHandler CLIENTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCLIENTERow(CLIENTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow AddCLIENTERow(int ID, string NOME, string CPF, string FONE, string ENDERECO, string CIDADE, string UF, string CEP, string OBS, string FONE2, string EMAIL, string BAIRRO, string IDENTIDADE) {
                CLIENTERow rowCLIENTERow = ((CLIENTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        NOME,
                        CPF,
                        FONE,
                        ENDERECO,
                        CIDADE,
                        UF,
                        CEP,
                        OBS,
                        FONE2,
                        EMAIL,
                        BAIRRO,
                        IDENTIDADE};
                rowCLIENTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCLIENTERow);
                return rowCLIENTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CLIENTEDataTable cln = ((CLIENTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CLIENTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNOME = base.Columns["NOME"];
                this.columnCPF = base.Columns["CPF"];
                this.columnFONE = base.Columns["FONE"];
                this.columnENDERECO = base.Columns["ENDERECO"];
                this.columnCIDADE = base.Columns["CIDADE"];
                this.columnUF = base.Columns["UF"];
                this.columnCEP = base.Columns["CEP"];
                this.columnOBS = base.Columns["OBS"];
                this.columnFONE2 = base.Columns["FONE2"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnBAIRRO = base.Columns["BAIRRO"];
                this.columnIDENTIDADE = base.Columns["IDENTIDADE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNOME = new global::System.Data.DataColumn("NOME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOME);
                this.columnCPF = new global::System.Data.DataColumn("CPF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPF);
                this.columnFONE = new global::System.Data.DataColumn("FONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFONE);
                this.columnENDERECO = new global::System.Data.DataColumn("ENDERECO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDERECO);
                this.columnCIDADE = new global::System.Data.DataColumn("CIDADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIDADE);
                this.columnUF = new global::System.Data.DataColumn("UF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUF);
                this.columnCEP = new global::System.Data.DataColumn("CEP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEP);
                this.columnOBS = new global::System.Data.DataColumn("OBS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOBS);
                this.columnFONE2 = new global::System.Data.DataColumn("FONE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFONE2);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnBAIRRO = new global::System.Data.DataColumn("BAIRRO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAIRRO);
                this.columnIDENTIDADE = new global::System.Data.DataColumn("IDENTIDADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDENTIDADE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow NewCLIENTERow() {
                return ((CLIENTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CLIENTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CLIENTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CLIENTERowChanged != null)) {
                    this.CLIENTERowChanged(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CLIENTERowChanging != null)) {
                    this.CLIENTERowChanging(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CLIENTERowDeleted != null)) {
                    this.CLIENTERowDeleted(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CLIENTERowDeleting != null)) {
                    this.CLIENTERowDeleting(this, new CLIENTERowChangeEvent(((CLIENTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCLIENTERow(CLIENTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CLIENTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PECASDataTable : global::System.Data.TypedTableBase<PECASRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTITULO;
            
            private global::System.Data.DataColumn columnPRECO_VENDA;
            
            private global::System.Data.DataColumn columnQUANTIDADE;
            
            private global::System.Data.DataColumn columnID_SERVICOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PECASDataTable() {
                this.TableName = "PECAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PECASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PECASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TITULOColumn {
                get {
                    return this.columnTITULO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRECO_VENDAColumn {
                get {
                    return this.columnPRECO_VENDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTIDADEColumn {
                get {
                    return this.columnQUANTIDADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_SERVICOSColumn {
                get {
                    return this.columnID_SERVICOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PECASRow this[int index] {
                get {
                    return ((PECASRow)(this.Rows[index]));
                }
            }
            
            public event PECASRowChangeEventHandler PECASRowChanging;
            
            public event PECASRowChangeEventHandler PECASRowChanged;
            
            public event PECASRowChangeEventHandler PECASRowDeleting;
            
            public event PECASRowChangeEventHandler PECASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPECASRow(PECASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PECASRow AddPECASRow(int ID, string TITULO, double PRECO_VENDA, int QUANTIDADE, SERVICORow parentSERVICORowBySERVICO_PECAS) {
                PECASRow rowPECASRow = ((PECASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        TITULO,
                        PRECO_VENDA,
                        QUANTIDADE,
                        null};
                if ((parentSERVICORowBySERVICO_PECAS != null)) {
                    columnValuesArray[4] = parentSERVICORowBySERVICO_PECAS[0];
                }
                rowPECASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPECASRow);
                return rowPECASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PECASDataTable cln = ((PECASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PECASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTITULO = base.Columns["TITULO"];
                this.columnPRECO_VENDA = base.Columns["PRECO_VENDA"];
                this.columnQUANTIDADE = base.Columns["QUANTIDADE"];
                this.columnID_SERVICOS = base.Columns["ID_SERVICOS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTITULO = new global::System.Data.DataColumn("TITULO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITULO);
                this.columnPRECO_VENDA = new global::System.Data.DataColumn("PRECO_VENDA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECO_VENDA);
                this.columnQUANTIDADE = new global::System.Data.DataColumn("QUANTIDADE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTIDADE);
                this.columnID_SERVICOS = new global::System.Data.DataColumn("ID_SERVICOS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SERVICOS);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PECASRow NewPECASRow() {
                return ((PECASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PECASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PECASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PECASRowChanged != null)) {
                    this.PECASRowChanged(this, new PECASRowChangeEvent(((PECASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PECASRowChanging != null)) {
                    this.PECASRowChanging(this, new PECASRowChangeEvent(((PECASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PECASRowDeleted != null)) {
                    this.PECASRowDeleted(this, new PECASRowChangeEvent(((PECASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PECASRowDeleting != null)) {
                    this.PECASRowDeleting(this, new PECASRowChangeEvent(((PECASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePECASRow(PECASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PECASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SERVICORow : global::System.Data.DataRow {
            
            private SERVICODataTable tableSERVICO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SERVICORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSERVICO = ((SERVICODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSERVICO.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_CLIENTES {
                get {
                    try {
                        return ((int)(this[this.tableSERVICO.ID_CLIENTESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_CLIENTES\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.ID_CLIENTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NUMERO_OS {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.NUMERO_OSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERO_OS\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.NUMERO_OSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COR {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.CORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COR\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.CORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA_ENTRADA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSERVICO.DATA_ENTRADAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATA_ENTRADA\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.DATA_ENTRADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODELO {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.MODELOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODELO\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.MODELOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ANO {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.ANOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANO\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.ANOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHASSI {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.CHASSIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHASSI\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.CHASSIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEC_RESPONSAVEL {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.MEC_RESPONSAVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEC_RESPONSAVEL\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.MEC_RESPONSAVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA_ENTREGA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSERVICO.DATA_ENTREGAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATA_ENTREGA\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.DATA_ENTREGAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DESCONTO {
                get {
                    try {
                        return ((double)(this[this.tableSERVICO.DESCONTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCONTO\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.DESCONTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VALOR_FRETE {
                get {
                    try {
                        return ((double)(this[this.tableSERVICO.VALOR_FRETEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALOR_FRETE\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.VALOR_FRETEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double VALOR_OS {
                get {
                    try {
                        return ((double)(this[this.tableSERVICO.VALOR_OSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALOR_OS\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.VALOR_OSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARECER_TECNICO {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.PARECER_TECNICOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARECER_TECNICO\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.PARECER_TECNICOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GARANTIA {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.GARANTIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GARANTIA\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.GARANTIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAO_OBRA {
                get {
                    try {
                        return ((double)(this[this.tableSERVICO.MAO_OBRAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAO_OBRA\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.MAO_OBRAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRICAO {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.DESCRICAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRICAO\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.DESCRICAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HR_KM {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.HR_KMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_KM\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.HR_KMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableSERVICO.CATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CATEGORIA\' in table \'SERVICO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSERVICO.CATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow CLIENTERow {
                get {
                    return ((CLIENTERow)(this.GetParentRow(this.Table.ParentRelations["CLIENTE_SERVICO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CLIENTE_SERVICO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableSERVICO.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableSERVICO.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_CLIENTESNull() {
                return this.IsNull(this.tableSERVICO.ID_CLIENTESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_CLIENTESNull() {
                this[this.tableSERVICO.ID_CLIENTESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMERO_OSNull() {
                return this.IsNull(this.tableSERVICO.NUMERO_OSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMERO_OSNull() {
                this[this.tableSERVICO.NUMERO_OSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCORNull() {
                return this.IsNull(this.tableSERVICO.CORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCORNull() {
                this[this.tableSERVICO.CORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_ENTRADANull() {
                return this.IsNull(this.tableSERVICO.DATA_ENTRADAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_ENTRADANull() {
                this[this.tableSERVICO.DATA_ENTRADAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODELONull() {
                return this.IsNull(this.tableSERVICO.MODELOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODELONull() {
                this[this.tableSERVICO.MODELOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANONull() {
                return this.IsNull(this.tableSERVICO.ANOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANONull() {
                this[this.tableSERVICO.ANOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHASSINull() {
                return this.IsNull(this.tableSERVICO.CHASSIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHASSINull() {
                this[this.tableSERVICO.CHASSIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEC_RESPONSAVELNull() {
                return this.IsNull(this.tableSERVICO.MEC_RESPONSAVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEC_RESPONSAVELNull() {
                this[this.tableSERVICO.MEC_RESPONSAVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_ENTREGANull() {
                return this.IsNull(this.tableSERVICO.DATA_ENTREGAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_ENTREGANull() {
                this[this.tableSERVICO.DATA_ENTREGAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCONTONull() {
                return this.IsNull(this.tableSERVICO.DESCONTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCONTONull() {
                this[this.tableSERVICO.DESCONTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALOR_FRETENull() {
                return this.IsNull(this.tableSERVICO.VALOR_FRETEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALOR_FRETENull() {
                this[this.tableSERVICO.VALOR_FRETEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALOR_OSNull() {
                return this.IsNull(this.tableSERVICO.VALOR_OSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALOR_OSNull() {
                this[this.tableSERVICO.VALOR_OSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARECER_TECNICONull() {
                return this.IsNull(this.tableSERVICO.PARECER_TECNICOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARECER_TECNICONull() {
                this[this.tableSERVICO.PARECER_TECNICOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGARANTIANull() {
                return this.IsNull(this.tableSERVICO.GARANTIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGARANTIANull() {
                this[this.tableSERVICO.GARANTIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAO_OBRANull() {
                return this.IsNull(this.tableSERVICO.MAO_OBRAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAO_OBRANull() {
                this[this.tableSERVICO.MAO_OBRAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRICAONull() {
                return this.IsNull(this.tableSERVICO.DESCRICAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRICAONull() {
                this[this.tableSERVICO.DESCRICAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_KMNull() {
                return this.IsNull(this.tableSERVICO.HR_KMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_KMNull() {
                this[this.tableSERVICO.HR_KMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCATEGORIANull() {
                return this.IsNull(this.tableSERVICO.CATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCATEGORIANull() {
                this[this.tableSERVICO.CATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PECASRow[] GetPECASRows() {
                if ((this.Table.ChildRelations["SERVICO_PECAS"] == null)) {
                    return new PECASRow[0];
                }
                else {
                    return ((PECASRow[])(base.GetChildRows(this.Table.ChildRelations["SERVICO_PECAS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CLIENTERow : global::System.Data.DataRow {
            
            private CLIENTEDataTable tableCLIENTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCLIENTE = ((CLIENTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableCLIENTE.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOME {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.NOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOME\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.NOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPF {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CPFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPF\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FONE {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.FONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FONE\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.FONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDERECO {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.ENDERECOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDERECO\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.ENDERECOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIDADE {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CIDADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIDADE\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CIDADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UF {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.UFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UF\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.UFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEP {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.CEPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEP\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.CEPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OBS {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.OBSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OBS\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.OBSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FONE2 {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.FONE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FONE2\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.FONE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAIRRO {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.BAIRROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BAIRRO\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.BAIRROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDENTIDADE {
                get {
                    try {
                        return ((string)(this[this.tableCLIENTE.IDENTIDADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDENTIDADE\' in table \'CLIENTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENTE.IDENTIDADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableCLIENTE.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableCLIENTE.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOMENull() {
                return this.IsNull(this.tableCLIENTE.NOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOMENull() {
                this[this.tableCLIENTE.NOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPFNull() {
                return this.IsNull(this.tableCLIENTE.CPFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPFNull() {
                this[this.tableCLIENTE.CPFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFONENull() {
                return this.IsNull(this.tableCLIENTE.FONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFONENull() {
                this[this.tableCLIENTE.FONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENDERECONull() {
                return this.IsNull(this.tableCLIENTE.ENDERECOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENDERECONull() {
                this[this.tableCLIENTE.ENDERECOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIDADENull() {
                return this.IsNull(this.tableCLIENTE.CIDADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIDADENull() {
                this[this.tableCLIENTE.CIDADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUFNull() {
                return this.IsNull(this.tableCLIENTE.UFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUFNull() {
                this[this.tableCLIENTE.UFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEPNull() {
                return this.IsNull(this.tableCLIENTE.CEPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEPNull() {
                this[this.tableCLIENTE.CEPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOBSNull() {
                return this.IsNull(this.tableCLIENTE.OBSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOBSNull() {
                this[this.tableCLIENTE.OBSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFONE2Null() {
                return this.IsNull(this.tableCLIENTE.FONE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFONE2Null() {
                this[this.tableCLIENTE.FONE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableCLIENTE.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableCLIENTE.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAIRRONull() {
                return this.IsNull(this.tableCLIENTE.BAIRROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAIRRONull() {
                this[this.tableCLIENTE.BAIRROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDENTIDADENull() {
                return this.IsNull(this.tableCLIENTE.IDENTIDADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDENTIDADENull() {
                this[this.tableCLIENTE.IDENTIDADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICORow[] GetSERVICORows() {
                if ((this.Table.ChildRelations["CLIENTE_SERVICO"] == null)) {
                    return new SERVICORow[0];
                }
                else {
                    return ((SERVICORow[])(base.GetChildRows(this.Table.ChildRelations["CLIENTE_SERVICO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PECASRow : global::System.Data.DataRow {
            
            private PECASDataTable tablePECAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PECASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePECAS = ((PECASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tablePECAS.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'PECAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePECAS.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TITULO {
                get {
                    try {
                        return ((string)(this[this.tablePECAS.TITULOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TITULO\' in table \'PECAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePECAS.TITULOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PRECO_VENDA {
                get {
                    try {
                        return ((double)(this[this.tablePECAS.PRECO_VENDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRECO_VENDA\' in table \'PECAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePECAS.PRECO_VENDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QUANTIDADE {
                get {
                    try {
                        return ((int)(this[this.tablePECAS.QUANTIDADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTIDADE\' in table \'PECAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePECAS.QUANTIDADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_SERVICOS {
                get {
                    try {
                        return ((int)(this[this.tablePECAS.ID_SERVICOSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_SERVICOS\' in table \'PECAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePECAS.ID_SERVICOSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICORow SERVICORow {
                get {
                    return ((SERVICORow)(this.GetParentRow(this.Table.ParentRelations["SERVICO_PECAS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SERVICO_PECAS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablePECAS.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablePECAS.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTITULONull() {
                return this.IsNull(this.tablePECAS.TITULOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTITULONull() {
                this[this.tablePECAS.TITULOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRECO_VENDANull() {
                return this.IsNull(this.tablePECAS.PRECO_VENDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRECO_VENDANull() {
                this[this.tablePECAS.PRECO_VENDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTIDADENull() {
                return this.IsNull(this.tablePECAS.QUANTIDADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTIDADENull() {
                this[this.tablePECAS.QUANTIDADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_SERVICOSNull() {
                return this.IsNull(this.tablePECAS.ID_SERVICOSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_SERVICOSNull() {
                this[this.tablePECAS.ID_SERVICOSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SERVICORowChangeEvent : global::System.EventArgs {
            
            private SERVICORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICORowChangeEvent(SERVICORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERVICORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CLIENTERowChangeEvent : global::System.EventArgs {
            
            private CLIENTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERowChangeEvent(CLIENTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PECASRowChangeEvent : global::System.EventArgs {
            
            private PECASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PECASRowChangeEvent(PECASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PECASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591